# Generated by Django 5.0.14 on 2025-08-23 18:15

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scraper', '0002_add_database_functions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScrapedURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True)),
                ('title', models.CharField(blank=True, max_length=500)),
                ('content', models.TextField()),
                ('word_count', models.IntegerField(default=0)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('status_code', models.IntegerField(default=200)),
                ('content_hash', models.CharField(blank=True, max_length=64)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'scraped_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_urls', models.IntegerField(default=0)),
                ('processed_urls', models.IntegerField(default=0)),
                ('successful_urls', models.IntegerField(default=0)),
                ('failed_urls', models.IntegerField(default=0)),
                ('status', models.CharField(default='running', max_length=20)),
                ('settings_snapshot', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'crawl_session',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='EnhancedMainURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('title', models.CharField(blank=True, max_length=500)),
                ('description', models.TextField(blank=True)),
                ('total_words', models.IntegerField(default=0)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('priority', models.IntegerField(default=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_crawled', models.DateTimeField(blank=True, null=True)),
                ('crawl_duration', models.FloatField(default=0.0)),
                ('error_message', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'enhanced_main_url',
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='mainurl',
            name='session',
        ),
        migrations.RemoveField(
            model_name='suburl',
            name='main_url',
        ),
        migrations.RemoveField(
            model_name='pagecontent',
            name='sub_url',
        ),
        migrations.AlterUniqueTogether(
            name='suburl',
            unique_together=None,
        ),
        migrations.CreateModel(
            name='ScrapedPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('title', models.CharField(blank=True, max_length=500)),
                ('meta_description', models.TextField(blank=True)),
                ('meta_keywords', models.TextField(blank=True)),
                ('h1_tags', models.JSONField(default=list)),
                ('h2_tags', models.JSONField(default=list)),
                ('h3_tags', models.JSONField(default=list)),
                ('content', models.TextField()),
                ('word_count', models.IntegerField(default=0)),
                ('images_count', models.IntegerField(default=0)),
                ('links_count', models.IntegerField(default=0)),
                ('internal_links', models.JSONField(default=list)),
                ('external_links', models.JSONField(default=list)),
                ('response_time', models.FloatField(default=0.0)),
                ('status_code', models.IntegerField(default=200)),
                ('content_hash', models.CharField(blank=True, max_length=64)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('main_url', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraped_pages', to='scraper.enhancedmainurl')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='scraper.crawlsession')),
            ],
            options={
                'db_table': 'scraped_page',
                'ordering': ['-scraped_at'],
                'unique_together': {('main_url', 'url')},
            },
        ),
        migrations.CreateModel(
            name='ScrapingError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('error_type', models.CharField(max_length=50)),
                ('error_message', models.TextField()),
                ('traceback', models.TextField(blank=True)),
                ('occurred_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='scraper.crawlsession')),
            ],
            options={
                'db_table': 'scraping_error',
                'ordering': ['-occurred_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapingProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_url', models.URLField(blank=True)),
                ('current_depth', models.IntegerField(default=0)),
                ('urls_found', models.IntegerField(default=0)),
                ('urls_processed', models.IntegerField(default=0)),
                ('estimated_completion', models.DateTimeField(blank=True, null=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='scraper.crawlsession')),
            ],
            options={
                'db_table': 'scraping_progress',
            },
        ),
        migrations.CreateModel(
            name='ScrapingProject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraping_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'scraping_project',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='enhancedmainurl',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_urls', to='scraper.scrapingproject'),
        ),
        migrations.AddField(
            model_name='crawlsession',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='scraper.scrapingproject'),
        ),
        migrations.CreateModel(
            name='CrawlConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_depth', models.IntegerField(default=3)),
                ('max_pages', models.IntegerField(default=1000)),
                ('delay_between_requests', models.FloatField(default=1.0)),
                ('user_agent', models.CharField(default='Mozilla/5.0', max_length=255)),
                ('respect_robots_txt', models.BooleanField(default=True)),
                ('enable_javascript', models.BooleanField(default=True)),
                ('custom_headers', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config', to='scraper.scrapingproject')),
            ],
            options={
                'db_table': 'crawl_config',
            },
        ),
        migrations.DeleteModel(
            name='ScrapingSession',
        ),
        migrations.DeleteModel(
            name='MainURL',
        ),
        migrations.DeleteModel(
            name='PageContent',
        ),
        migrations.DeleteModel(
            name='SubURL',
        ),
        migrations.AlterUniqueTogether(
            name='enhancedmainurl',
            unique_together={('project', 'url')},
        ),
    ]
